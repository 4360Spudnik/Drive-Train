
package org.usfirst.frc.team4360.robot;

import edu.wpi.first.wpilibj.DriverStation;
import edu.wpi.first.wpilibj.SampleRobot;
import edu.wpi.first.wpilibj.Spark;
import edu.wpi.first.wpilibj.Talon;

/**
 * This is a demo program showing the use of the RobotDrive class. The
 * SampleRobot class is the base of a robot application that will automatically
 * call your Autonomous and OperatorControl methods at the right time as
 * controlled by the switches on the driver station or the field controls.
 *
 * <p>The VM is configured to automatically run this class, and to call the
 * functions corresponding to each mode, as described in the SampleRobot
 * documentation. If you change the name of this class or the package after
 * creating this project, you must also update the build.properties file in the
 * project.
 *
 * <p>WARNING: While it may look like a good choice to use for your code if
 * you're inexperienced, don't. Unless you know what you are doing, complex code
 * will be much more difficult under this system. Use IterativeRobot or
 * Command-Based instead if you're new.
 */
public class Robot extends SampleRobot {
	
	/////Drive motors://///
	private Talon motor0; //Left
	private Talon motor1; //Left
	private Talon motor2; //Right
	private Talon motor3; //Right
	
	/////Actual controller://///
	private Xbox stick0 = new Xbox(0);
	
	/////Extra Schtuff://///
	private Spark motor4; //intake 1
	private Spark motor5; //intake 2
	private Spark motor6; //arm movement
	private Spark motor7; //arm movement
	

	public Robot() {
		
	}

	@Override
	public void robotInit() {
		
	}
	
	@Override
	public void autonomous() {
		
		String side;
		side = DriverStation.getInstance().getGameSpecificMessage();
                if(side.length() > 0)
                {
		  if(side.charAt(0) == 'L') {
			
			  for (int i = 0; i > 32; i++) {
				  if (i <= 2) {
					  motor0.set(1); //Left
					  motor1.set(1); //Left
					  motor2.set(1); //Right
					  motor3.set(1); //Right
				  } else if (i == 3) {
					  motor0.set(.5); //Left
					  motor1.set(.5); //Left
					  motor2.set(-.5); //Right
					  motor3.set(-.5); //Right
				  } else if (i == 4) {
					  motor0.set(1); //Left
					  motor1.set(1); //Left
					  motor2.set(1); //Right
					  motor3.set(1); //Right
				  } else if (i <= 6 || i > 4) {
					  motor0.set(-.5); //Left
					  motor1.set(-.5); //Left
					  motor2.set(.5); //Right
					  motor3.set(.5); //Right
				  } else if (i == 7) {
					  motor0.set(1); //Left
					  motor1.set(1); //Left
					  motor2.set(1); //Right
					  motor3.set(1); //Right
				  } else if (i == 8 ) {
					  motor6.set(1); //Arm Movement
					  motor7.set(1); //Arm Movement
				  } else {
					  motor4.set(1); //Intake/Output
					  motor5.set(1); //Intake/Output
				  }
			  }
			  
		  } else {
			
			  for (int i = 0; i > 32; i++) {
				  if (i <= 2) {
					  motor0.set(1); //Left
					  motor1.set(1); //Left
					  motor2.set(1); //Right
					  motor3.set(1); //Right
				  } else if (i == 3) {
					  motor0.set(-.5); //Left
					  motor1.set(-.5); //Left
					  motor2.set(.5); //Right
					  motor3.set(.5); //Right
				  } else if (i == 4) {
					  motor0.set(1); //Left
					  motor1.set(1); //Left
					  motor2.set(1); //Right
					  motor3.set(1); //Right
				  } else if (i <= 6 || i > 4) {
					  motor0.set(.5); //Left
					  motor1.set(.5); //Left
					  motor2.set(-.5); //Right
					  motor3.set(-.5); //Right
				  } else if (i == 7) {
					  motor0.set(1); //Left
					  motor1.set(1); //Left
					  motor2.set(1); //Right
					  motor3.set(1); //Right
				  } else if (i == 8 ) {
					  motor6.set(1); //Arm Movement
					  motor7.set(1); //Arm Movement
				  } else {
					  motor4.set(1); //Intake/Output
					  motor5.set(1); //Intake/Output
				  }
			  }
			  
		  }
                }
		
	}
	
	public void teleopPeriodic() {
		if (stick0.getLeftBump() == true || stick0.getRightBump() == false) {
			motor0.set(stick0.getLeftJoyY()*.5); //Left
			motor1.set(stick0.getLeftJoyY()*.5); //Left
			motor2.set(stick0.getRightJoyY()*.5); //Right
			motor3.set(stick0.getRightJoyY()*.5); //Right
		} else {
			motor0.set(stick0.getLeftJoyY()*1); //Left
			motor1.set(stick0.getLeftJoyY()*1);	//Left
			motor2.set(stick0.getRightJoyY()*1); //Right
			motor3.set(stick0.getRightJoyY()*1); //Right
		}
		
			motor4.set(stick0.getTriggered());
			motor5.set(stick0.getTriggered());
		
		if (stick0.getButtonA() == true || stick0.getButtonB() == false){
			
			motor6.set(.25);
			motor7.set(.25);
			
		} else if (stick0.getButtonA() == false || stick0.getButtonB() == true) {
			
			motor6.set(-.25);
			motor7.set(-.25);
			
		} else {
			
			motor6.set(0);
			motor7.set(0);
			
		}
		
	}

	@Override
	public void operatorControl() {
		
	}
	
	@Override
	public void test() {
	}
}
